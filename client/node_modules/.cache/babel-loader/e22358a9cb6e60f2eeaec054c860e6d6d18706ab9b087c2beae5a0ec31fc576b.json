{"ast":null,"code":"var _jsxFileName = \"/Users/katjakontio/Desktop/git/DeskStretch/Deskstretch/src/components/Popup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport data from \"../data/exercises\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Popup = _ref => {\n  _s();\n  let {\n    title,\n    message,\n    onClose\n  } = _ref;\n  const [showPopup, setShowPopup] = useState(true);\n  const [exercise, setExercise] = useState(\"\");\n  const exercises = data;\n\n  // useEffect(() => {\n  //     setShowPopup(true);\n\n  //     const url = `https://wger.de/api/v2/exercise/?language=2&`;\n\n  //     fetch(url, {\n  //         headers: {},\n  //     })\n  //         .then((response) => {\n  //             if (!response.ok) {\n  //                 throw new Error(`Error: ${response.status}`);\n  //             }\n  //             return response.json();\n  //         })\n  //         .then((data) => {\n  //             console.log(data);\n\n  //             setExercise(data);\n  //         })\n  //         .catch((error) => {\n  //             console.error(\"Request failed:\", error);\n  //         });\n  // }, []);\n\n  const handleClose = () => {\n    setShowPopup(false);\n    onClose(); // Call the onClose callback function passed from the Timer component\n  };\n\n  // const getRandomExerciseData = () => {\n  //     if (exercise.results && exercise.results.length > 0) {\n  //         const randomIndex = Math.floor(Math.random() * exercise.results.length);\n  //         const randomExercise = exercise.results[randomIndex];\n  //         return {\n  //             name: randomExercise.name,\n  //             description: randomExercise.description,\n  //         };\n  //     }\n  //     return { name: \"\", description: \"\" };\n  // };\n\n  // const randomExerciseData = getRandomExerciseData();\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showPopup,\n    onHide: handleClose,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: exercises.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, exercises.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      dangerouslySetInnerHTML: {\n        __html: randomExerciseData.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Popup, \"kkCsdiyfWG/kfmBV0OVrCLiKqt0=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","data","jsxDEV","_jsxDEV","Popup","_ref","_s","title","message","onClose","showPopup","setShowPopup","exercise","setExercise","exercises","handleClose","show","onHide","centered","children","Header","closeButton","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","id","Body","dangerouslySetInnerHTML","__html","randomExerciseData","description","Footer","_c","$RefreshReg$"],"sources":["/Users/katjakontio/Desktop/git/DeskStretch/Deskstretch/src/components/Popup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport data from \"../data/exercises\";\n\nconst Popup = ({ title, message, onClose }) => {\n    const [showPopup, setShowPopup] = useState(true);\n    const [exercise, setExercise] = useState(\"\");\n    const exercises = data;\n\n    // useEffect(() => {\n    //     setShowPopup(true);\n\n    //     const url = `https://wger.de/api/v2/exercise/?language=2&`;\n\n    //     fetch(url, {\n    //         headers: {},\n    //     })\n    //         .then((response) => {\n    //             if (!response.ok) {\n    //                 throw new Error(`Error: ${response.status}`);\n    //             }\n    //             return response.json();\n    //         })\n    //         .then((data) => {\n    //             console.log(data);\n\n    //             setExercise(data);\n    //         })\n    //         .catch((error) => {\n    //             console.error(\"Request failed:\", error);\n    //         });\n    // }, []);\n\n    const handleClose = () => {\n        setShowPopup(false);\n        onClose(); // Call the onClose callback function passed from the Timer component\n    };\n\n    // const getRandomExerciseData = () => {\n    //     if (exercise.results && exercise.results.length > 0) {\n    //         const randomIndex = Math.floor(Math.random() * exercise.results.length);\n    //         const randomExercise = exercise.results[randomIndex];\n    //         return {\n    //             name: randomExercise.name,\n    //             description: randomExercise.description,\n    //         };\n    //     }\n    //     return { name: \"\", description: \"\" };\n    // };\n\n    // const randomExerciseData = getRandomExerciseData();\n\n    return (\n        <Modal show={showPopup} onHide={handleClose} centered>\n            <Modal.Header closeButton>\n                <div key={exercises.id}>\n                    <Modal.Title>{exercises.name}</Modal.Title>\n                </div>\n            </Modal.Header>\n            <Modal.Body dangerouslySetInnerHTML={{ __html: randomExerciseData.description }}></Modal.Body>\n\n            <Modal.Footer></Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default Popup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAC/C,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMiB,SAAS,GAAGb,IAAI;;EAEtB;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtBJ,YAAY,CAAC,KAAK,CAAC;IACnBF,OAAO,EAAE,CAAC,CAAC;EACf,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACIN,OAAA,CAACJ,KAAK;IAACiB,IAAI,EAAEN,SAAU;IAACO,MAAM,EAAEF,WAAY;IAACG,QAAQ;IAAAC,QAAA,gBACjDhB,OAAA,CAACJ,KAAK,CAACqB,MAAM;MAACC,WAAW;MAAAF,QAAA,eACrBhB,OAAA;QAAAgB,QAAA,eACIhB,OAAA,CAACJ,KAAK,CAACuB,KAAK;UAAAH,QAAA,EAAEL,SAAS,CAACS;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAe,GADrCb,SAAS,CAACc,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEhB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACK,eACfxB,OAAA,CAACJ,KAAK,CAAC8B,IAAI;MAACC,uBAAuB,EAAE;QAAEC,MAAM,EAAEC,kBAAkB,CAACC;MAAY;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAc,eAE9FxB,OAAA,CAACJ,KAAK,CAACmC,MAAM;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAgB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzB;AAEhB,CAAC;AAACrB,EAAA,CA5DIF,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AA8DX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}