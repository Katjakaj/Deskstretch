{"ast":null,"code":"var _jsxFileName = \"/Users/katjakontio/Desktop/git/DeskStretch/Deskstretch/src/components/Timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../scss/components/timer.scss\";\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [time, setTime] = useState(10); // 5 minutes in seconds\n  const [selectedTime, setSelectedTime] = useState({\n    hours: \"\",\n    minutes: \"\"\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [showPopup, setShowPopup] = useState(true);\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTime(prevTime => {\n          if (prevTime === 0) {\n            clearInterval(interval);\n            setShowPopup(true); // Show the popup when the timer reaches 0\n            return 0;\n          } else {\n            return prevTime - 1;\n          }\n        });\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive, time]); // Include 'time' as a dependency in the useEffect dependency array\n\n  const startTimer = () => {\n    setIsActive(true);\n    const totalTimeInSeconds = selectedTime.hours * 3600 + selectedTime.minutes * 60;\n    setTime(totalTimeInSeconds);\n  };\n  const stopTimer = () => {\n    setIsActive(false);\n  };\n  const resetTimer = () => {\n    setIsActive(false);\n    const totalTimeInSeconds = selectedTime.hours * 3600 + selectedTime.minutes * 60;\n    setTime(totalTimeInSeconds);\n  };\n  const handleTimeChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setSelectedTime(prevTime => ({\n      ...prevTime,\n      [name]: parseInt(value)\n    }));\n  };\n  const formatTime = time => {\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor(time % 3600 / 60);\n    const seconds = time % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n  };\n  const hourOptions = Array.from({\n    length: 24\n  }, (_, i) => i); // Generate options for hours (0-23)\n  const minuteOptions = Array.from({\n    length: 12\n  }, (_, i) => i * 5); // Generate options for minutes (0, 5, 10, 15, ..., 55)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-container container d-flex align-items-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"circle-svg\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"circle-background\",\n                cx: \"50%\",\n                cy: \"50%\",\n                r: \"45%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"circle-progress\",\n                cx: \"50%\",\n                cy: \"50%\",\n                r: \"45%\",\n                style: {\n                  strokeDasharray: `${time / (selectedTime.hours * 3600 + selectedTime.minutes * 60) * 283}% 283%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time text-white\",\n                children: formatTime(time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-4 d-flex justify-content-center\",\n          children: [!isActive ? /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: stopTimer,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 74\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-2 d-flex justify-content-center mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mx-1 form-floating\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"hours\",\n              value: selectedTime.hours,\n              onChange: handleTimeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                selected: true,\n                children: \"Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), hourOptions.map(hour => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: hour,\n                children: hour\n              }, hour, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mx-1 form-floating\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              name: \"hours\",\n              value: selectedTime.hours,\n              onChange: handleTimeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), hourOptions.map(hour => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: hour,\n                children: hour\n              }, hour, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"floatinginput\",\n              children: \"min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n        onClose: handlePopupClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"6NBBOqRRdYFxrf3oNHaG2yocayc=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Popup","jsxDEV","_jsxDEV","Timer","_s","time","setTime","selectedTime","setSelectedTime","hours","minutes","isActive","setIsActive","showPopup","setShowPopup","interval","setInterval","prevTime","clearInterval","startTimer","totalTimeInSeconds","stopTimer","resetTimer","handleTimeChange","event","name","value","target","parseInt","formatTime","Math","floor","seconds","toString","padStart","handlePopupClose","hourOptions","Array","from","length","_","i","minuteOptions","className","children","cx","cy","r","fileName","_jsxFileName","lineNumber","columnNumber","style","strokeDasharray","onClick","onChange","disabled","selected","map","hour","htmlFor","onClose","_c","$RefreshReg$"],"sources":["/Users/katjakontio/Desktop/git/DeskStretch/Deskstretch/src/components/Timer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../scss/components/timer.scss\";\nimport Popup from \"./Popup\";\n\nconst Timer = () => {\n    const [time, setTime] = useState(10); // 5 minutes in seconds\n    const [selectedTime, setSelectedTime] = useState({ hours: \"\", minutes: \"\" });\n    const [isActive, setIsActive] = useState(false);\n    const [showPopup, setShowPopup] = useState(true);\n\n    useEffect(() => {\n        let interval = null;\n\n        if (isActive) {\n            interval = setInterval(() => {\n                setTime((prevTime) => {\n                    if (prevTime === 0) {\n                        clearInterval(interval);\n                        setShowPopup(true); // Show the popup when the timer reaches 0\n                        return 0;\n                    } else {\n                        return prevTime - 1;\n                    }\n                });\n            }, 1000);\n        } else {\n            clearInterval(interval);\n        }\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, [isActive, time]); // Include 'time' as a dependency in the useEffect dependency array\n\n    const startTimer = () => {\n        setIsActive(true);\n        const totalTimeInSeconds = selectedTime.hours * 3600 + selectedTime.minutes * 60;\n        setTime(totalTimeInSeconds);\n    };\n\n    const stopTimer = () => {\n        setIsActive(false);\n    };\n\n    const resetTimer = () => {\n        setIsActive(false);\n        const totalTimeInSeconds = selectedTime.hours * 3600 + selectedTime.minutes * 60;\n        setTime(totalTimeInSeconds);\n    };\n\n    const handleTimeChange = (event) => {\n        const { name, value } = event.target;\n\n        setSelectedTime((prevTime) => ({\n            ...prevTime,\n            [name]: parseInt(value),\n        }));\n    };\n\n    const formatTime = (time) => {\n        const hours = Math.floor(time / 3600);\n        const minutes = Math.floor((time % 3600) / 60);\n        const seconds = time % 60;\n\n        return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds\n            .toString()\n            .padStart(2, \"0\")}`;\n    };\n\n    const handlePopupClose = () => {\n        setShowPopup(false);\n    };\n\n    const hourOptions = Array.from({ length: 24 }, (_, i) => i); // Generate options for hours (0-23)\n    const minuteOptions = Array.from({ length: 12 }, (_, i) => i * 5); // Generate options for minutes (0, 5, 10, 15, ..., 55)\n\n    return (\n        <div className=\"timer\">\n            <div className=\"timer-container container d-flex align-items-center justify-content-center\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 d-flex justify-content-center\">\n                        <div className=\"circle\">\n                            <svg className=\"circle-svg\">\n                                <circle className=\"circle-background\" cx=\"50%\" cy=\"50%\" r=\"45%\" />\n                                <circle\n                                    className=\"circle-progress\"\n                                    cx=\"50%\"\n                                    cy=\"50%\"\n                                    r=\"45%\"\n                                    style={{\n                                        strokeDasharray: `${\n                                            (time / (selectedTime.hours * 3600 + selectedTime.minutes * 60)) * 283\n                                        }% 283%`,\n                                    }}\n                                />\n                            </svg>\n                            <div className=\"time-wrapper\">\n                                <span className=\"time text-white\">{formatTime(time)}</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 mt-4 d-flex justify-content-center\">\n                        {!isActive ? <a onClick={startTimer}>Start</a> : <a onClick={stopTimer}>Stop</a>}\n                        <a onClick={resetTimer}>Reset</a>\n                    </div>\n                    <div className=\"col-12 mt-2 d-flex justify-content-center mt-4\">\n                        <div className=\"mx-1 form-floating\">\n                            <select name=\"hours\" value={selectedTime.hours} onChange={handleTimeChange}>\n                                <option value=\"\" disabled selected>\n                                    Hours\n                                </option>\n                                {hourOptions.map((hour) => (\n                                    <option key={hour} value={hour}>\n                                        {hour}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"mx-1 form-floating\">\n                            <select\n                                className=\"form-select\"\n                                name=\"hours\"\n                                value={selectedTime.hours}\n                                onChange={handleTimeChange}\n                            >\n                                <option value=\"\" disabled>\n                                    Select hours\n                                </option>\n                                {hourOptions.map((hour) => (\n                                    <option key={hour} value={hour}>\n                                        {hour}\n                                    </option>\n                                ))}\n                            </select>\n\n                            <label htmlFor=\"floatinginput\">min</label>\n                        </div>\n                    </div>\n                </div>\n\n                {showPopup && <Popup onClose={handlePopupClose} />}\n            </div>\n        </div>\n    );\n};\n\nexport default Timer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}